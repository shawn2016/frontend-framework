@charset "UTF-8";
/**
  介绍scss中的函数
*/
.stringFun {
  /* 添加引号*/
  color: "red";
  /* 删除引号 */
  background: red;
  /*  变为大写 */
  color: "COMPARABLE";
  /*  变为小写 */
  color: "red";
  /*返回$string的长度(汉字算一个) */
  font-size: 10;
  /* 返回$substring在$string的位置*/
  font-size: 2;
  /** 在$string的$index处插入$insert*/
  color: "c232323omparable";
  /**截取$string的$start-at和$end-at之间的字符串*/
  color: "co"; }

.numberFunction {
  /* percentage($number) 转换为百分比形式 **/
  color: 100%;
  /* round($number) 四舍五入为整数 */
  color: 3;
  /* ceil($number) 数值向上取整*/
  color: 4;
  /* floor($number) 数值向下取整*/
  color: 3;
  /* abs($number) 获取绝对值*/
  color: 33;
  /* min($number...) 获取最小值*/
  color: -33;
  /* max($number...) 获取最大值*/
  color: 3.232;
  /*random($number?:number) 不传入值：获得0-1的随机数；传入正整数n：获得0-n的随机整数（左开右闭）*/
  color: 0.68831;
  color: 854;
  color: 1; }

.arrFunction {
  /* length($list) 获取数组长度  */
  font-size: 5;
  /* nth($list, n)  获取指定下标的元素  */
  font-size: 5;
  /* set-nth($list, 向$list的$n处插入$value  */
  color: 3, 4, 4, 2, 3;
  /* join($list1, $list2, $separator)  拼接$list1和list2；$separator为新list的分隔符，默认为auto，可选择comma、space  */
  color: 3, 4, 5, 2, 3, 33 44, 523, 434, 3;
  color: 3 4 5 2 3 33 44 523 434 3;
  /*append($list, $val, $separator)  向$list的末尾添加$val；$separator为新list的分隔符，默认为auto，可选择comma、space  */
  color: 3 4 5 2 3 3434;
  /*index($list, $value) 返回$value值在$list中的索引值 */
  color: 3;
  /* zip($lists…) 将几个列表结合成一个多维的列表；要求每个的列表个数值必须是相同的 */
  color: 3 33 232 33 44, 4 323 523, 5 523 434, 2 545 3; }

.mapFunction {
  /* map-get($map, $key)  获取$map中$key对应的$value*/
  color: red;
  /* map-merge($map1, $map2) 合并$map1和$map2，返回一个新$map*/
  color: rgba(23, 255, 13, 0.3);
  /* map-remove($map, $key)  从$map中删除$key，返回一个新$map */
  /* map-keys($map) 返回$map所有的$key */
  color: title2, desc3, text4, active3;
  /*map-values($map) 返回$map所有的$value*/
  color: red, green, rgba(23, 255, 13, 0.3), rgba(23, 33, 13, 0.3);
  /*map-has-key($map, $key) 判断$map中是否存在$key，返回对应的布尔值*/
  color: false;
  color: true;
  /*keywords($args) 返回一个函数的参数，并可以动态修改其值*/ }

.rgbFunction {
  color: rgba(23, 33, 13, 0.3);
  color: #17210d;
  /*  red($color) 从$color中获取其中红色值 */
  color: 18;
  /* green($color) 从$color中获取其中绿色值 */
  color: 62;
  /*  blue($color) 从$color中获取其中蓝色值 */
  color: 227;
  /* *按照$weight比例，将$color1和$color2混合为一个新颜色*/
  color: #316e68; }

.hslFunction {
  color: white;
  /*通过色相（hue）、饱和度(saturation)、亮度（lightness）和透明（alpha）的值创建一个颜色 */
  color: rgba(255, 255, 255, 0.2);
  /* 从一个颜色中获取饱和度（saturation）值*/
  color: 83.80952%;
  /* lightness($color) 从一个颜色中获取亮度（lightness）值*/
  color: 89.01961%;
  /* adjust-hue($color,$degrees) 通过改变一个颜色的色相值，创建一个新的颜色*/
  color: #7fee32;
  /* lighten($color,$amount) 通过改变颜色的亮度值，让颜色变亮，创建一个新的颜色*/
  color: #f7a5f2;
  /* darken($color,$amount) 通过改变颜色的亮度值，让颜色变暗，创建一个新的颜色 */
  color: #7f2011;
  /* hue($color) 从一个颜色中获取亮度色相（hue）值*/
  color: 8.48168deg; }

.opacityfunction {
  color: 1;
  color: 1;
  /* rgba($color,$alpha)  改变颜色的透明度*/
  color: rgba(222, 222, 222, 0.4);
  /*opacify($color, $amount) / fade-in($color, $amount)  	使颜色更不透明*/
  color: #dedede;
  color: #dedede;
  /* transparentize($color, $amount) / fade-out($color, $amount)*/
  color: rgba(18, 62, 227, 0.8);
  color: rgba(18, 62, 227, 0.7); }

.introspection {
  /* 返回type-of($value)的类型*/
  color: string;
  color: number;
  color: list;
  color: map;
  /*unit($number) 返回$number的单位*/
  color: "px";
  color: "rem";
  color: "vh";
  /**unitless($number) 判断$number是否带单位，返回对应的布尔值*/
  color: false;
  color: true;
  color: false;
  /** comparable($number1, $number2) 判断$number1和$number2是否可以做加、减和合并，返回对应的布尔值*/
  color: true;
  color: true;
  color: false; }

.defineFunction {
  color: 34px; }
