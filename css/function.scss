/**
  介绍scss中的函数
*/
//字符串函数
$stringColor:red;
$stringColorQu:"red";
$stringColorCase:'RED';
$stringColorLOW:'comparable';

.stringFun{
  /* 添加引号*/
  color:quote($stringColor);
  /* 删除引号 */
  background:unquote($stringColorQu);
  /*  变为大写 */
  color:to-upper-case($stringColorLOW);
    /*  变为小写 */
  color:to-lower-case($stringColorCase);
  /*返回$string的长度(汉字算一个) */
  font-size: str-length($stringColorLOW);
  /* 返回$substring在$string的位置*/
  font-size: str-index($stringColorLOW,'o');
  /** 在$string的$index处插入$insert*/
  color:str-insert($stringColorLOW, '232323', 2);
  /**截取$string的$start-at和$end-at之间的字符串*/
  color: str-slice($stringColorLOW, 0, 2); 
}


//数字函数
$numberInt:1;
$numberFloat:3.232; 
$numberlowZero:-33;

.numberFunction{
  /* percentage($number) 转换为百分比形式 **/
  color: percentage($numberInt);
  /* round($number) 四舍五入为整数 */
  color: round($numberFloat);
  /* ceil($number) 数值向上取整*/ 
  color: ceil($numberFloat);
  /* floor($number) 数值向下取整*/
  color: floor($numberFloat);
   /* abs($number) 获取绝对值*/
   color: abs($numberlowZero);
   /* min($number...) 获取最小值*/
   color: min($numberlowZero,$numberFloat);
   /* max($number...) 获取最大值*/
   color: max($numberlowZero,$numberFloat);
   /*random($number?:number) 不传入值：获得0-1的随机数；传入正整数n：获得0-n的随机整数（左开右闭）*/
   color: random();
   color: random(1099);
   color: random(1);

}


// 数组函数

$list:3,4,5,2,3;
$lista:33 44,523,434,3;
$list3:33 232,323,523,545;

.arrFunction{
   /* length($list) 获取数组长度  */
   font-size:length($list) ;
   /* nth($list, n)  获取指定下标的元素  */
   font-size:nth($list,3) ;
   /* set-nth($list, 向$list的$n处插入$value  */
   color: set-nth($list,3,4);
   /* join($list1, $list2, $separator)  拼接$list1和list2；$separator为新list的分隔符，默认为auto，可选择comma、space  */
   color: join($list,$lista,comma);
   color: join($list,$lista,space );
   /*append($list, $val, $separator)  向$list的末尾添加$val；$separator为新list的分隔符，默认为auto，可选择comma、space  */
   color: append($list,3434,space );
   /*index($list, $value) 返回$value值在$list中的索引值 */
   color: index($list,5 );
   /* zip($lists…) 将几个列表结合成一个多维的列表；要求每个的列表个数值必须是相同的 */
   color: zip($list,$list3 ,$lista);
}

// 映射函数

$colorMap:(
  title:red,
  desc:green,
  text:rgba(23,4334,13,0.3),
  active:rgba(23,33,13,0.3),
);
$colorMap2:(
  title2:red,
  desc3:green,
  text4:rgba(23,4334,13,0.3),
  active3:rgba(23,33,13,0.3),
);
.mapFunction{
  /* map-get($map, $key)  获取$map中$key对应的$value*/
  color: map-get($colorMap, title);
  /* map-merge($map1, $map2) 合并$map1和$map2，返回一个新$map*/
  $map4:map-merge($colorMap, $colorMap2);
  color:   map-get($map4, text4);
  /* map-remove($map, $key)  从$map中删除$key，返回一个新$map */
  $map5:map-remove($colorMap2, desc3);
  color: map-get($map5, desc3); 
  /* map-keys($map) 返回$map所有的$key */
  color:map-keys($colorMap2) ;

  /*map-values($map) 返回$map所有的$value*/
  color:map-values($colorMap2) ;
  /*map-has-key($map, $key) 判断$map中是否存在$key，返回对应的布尔值*/
  color:map-has-key($colorMap2,title) ;
  color:map-has-key($colorMap2,active3) ; 
  /*keywords($args) 返回一个函数的参数，并可以动态修改其值*/
  // @edit:keywords($colorMap2);
  // color: @edit(title,444) ; 
}


//颜色函数


.rgbFunction{
  color: rgba(23,33,13,0.3);
  color: rgb(23,33,13);
  /*  red($color) 从$color中获取其中红色值 */
  color: red(#123ee3);
  /* green($color) 从$color中获取其中绿色值 */
  color: green(#123ee3);
  /*  blue($color) 从$color中获取其中蓝色值 */
  color:  blue(#123ee3);
  /* *按照$weight比例，将$color1和$color2混合为一个新颜色*/
  color:mix(#232332,#379282,32)
}

//HSL函数
.hslFunction{
  color:hsl(32,223,434);
  /*通过色相（hue）、饱和度(saturation)、亮度（lightness）和透明（alpha）的值创建一个颜色 */
  color:hsla(32,223,434,0.2);
  /* 从一个颜色中获取饱和度（saturation）值*/
  color: saturation(#e3ee3e);
  /* lightness($color) 从一个颜色中获取亮度（lightness）值*/
  color: lightness(#e3e3e3);
  /* adjust-hue($color,$degrees) 通过改变一个颜色的色相值，创建一个新的颜色*/
  color: adjust-hue(#E3EE32,32) ;
  /* lighten($color,$amount) 通过改变颜色的亮度值，让颜色变亮，创建一个新的颜色*/
  color: lighten(#ee3ee3,22);
  /* darken($color,$amount) 通过改变颜色的亮度值，让颜色变暗，创建一个新的颜色 */
  color: darken(#e23e23,23);
  /* hue($color) 从一个颜色中获取亮度色相（hue）值*/
  color: hue(#e23e23);
}

//Opacity函数
.opacityfunction{
  color: alpha(#dedede);
  color:opacity(#909232);
  /* rgba($color,$alpha)  改变颜色的透明度*/
  color: rgba(#dedede,0.4);
  /*opacify($color, $amount) / fade-in($color, $amount)  	使颜色更不透明*/
  color: opacify(#dedede,0.4);
  color: fade-in(#dedede,0.5);

  /* transparentize($color, $amount) / fade-out($color, $amount)*/
  color: transparentize(#123ee3,0.2);
  color: fade-out(#123ee3,0.3);
}


//introspection(内省)函数 
$color:1,2,3,45;
.introspection{
  /* 返回type-of($value)的类型*/
   color: type-of('333');
   color: type-of(2);
   color: type-of($color);
   color: type-of($colorMap);
   /*unit($number) 返回$number的单位*/
   color: unit(3px);
   color: unit(3rem);
   color: unit(34vh);
   /**unitless($number) 判断$number是否带单位，返回对应的布尔值*/
   color: unitless(4px);
   color: unitless(4);
   color: unitless(4rem); 
   /** comparable($number1, $number2) 判断$number1和$number2是否可以做加、减和合并，返回对应的布尔值*/
   color: comparable(3px, 4px);
   color: comparable(3, 4);
   color: comparable(2REM, 4px);
}

//自定义函数

@function myParams($size){
 @return 1px * $size;
}
.defineFunction{
  color: myParams(34);
}
